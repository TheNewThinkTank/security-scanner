---
name: Qualify-Code

on:
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

env:
  PYTHONVERSION: 3.11

jobs:
  qualify_code:
    runs-on: ubuntu-latest

    steps:
      - name: Check-out-repository-code
        uses: actions/checkout@v4

      - name: Setup Python and Poetry
        uses: TheNewThinkTank/gh-actions/.github/actions/setup-python-poetry@v1.0.4  # main
        with:
          python-version: ${{ env.PYTHONVERSION }}

      - name: Cache-mypy-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/mypy
          key: ${{ runner.os }}-mypy-${{ hashFiles('**/mypy.ini') }}
          restore-keys: ${{ runner.os }}-mypy-

      - name: Static-type-checks-with-mypy
        run: poetry run mypy security_scanner/ --exclude site-packages

      - name: Lint with ruff
        run: poetry run ruff check

      - name: Run-bandit
        run: poetry run bandit -r . --exclude site-packages --severity-level high

      # - name: Run-safety
      #   run: safety check --full-report

      # - name: Run-pip-audit
      #   uses: pypa/gh-action-pip-audit@v1.0.0
      #   with:
      #     inputs: pyproject.toml

      # - name: Run-pip-audit
      #   run: |
      #     poetry run pip-audit pyproject.toml -o /tmp/pip-audit-output.txt
      #     cat /tmp/pip-audit-output.txt

      - name: Run tests
        run: |
          poetry run pytest --rootdir=$(pwd) security_scanner/test/ --cov --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: TheNewThinkTank/security-scanner
          codecov_yml_path: .config/codecov.yml
