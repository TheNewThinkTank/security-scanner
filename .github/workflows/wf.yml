---
name: security-scanner Workflow

on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  Qualify-Code:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: pip

      - name: Install and cache poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Cache poetry dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install dependencies with poetry
        run: poetry install
        env:
          POETRY_VIRTUALENVS_IN_PROJECT: true
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Lint with ruff
        run: poetry run ruff check

      - name: Run Bandit
        run: poetry run bandit -r . --exclude site-packages --severity-level high

      - name: Run tests
        run: |
          poetry run pytest --rootdir=$(pwd) test/ --cov --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: TheNewThinkTank/security-scanner
          codecov_yml_path: .config/codecov.yml
